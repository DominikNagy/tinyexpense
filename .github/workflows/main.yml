  name: Build and Deploy Spring app

  on:
    push:
      branches:
        - main

  jobs:
    build-publish:
      name: build and publish application
      runs-on: ubuntu-latest
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_URL: ${{ secrets.DB_URL }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: 'corretto'
            java-version: 17

        - name: Build the application
          run: mvn -B clean package -DskipTests --file pom.xml

        - name: Build Docker Image
          uses: docker/build-push-action@v2
          with:
            context: .
            dockerfile: Dockerfile
            push: false
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tinyexpense:latest

        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: .
            dockerfile: Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tinyexpense:latest

    deploy:
      needs: build-publish
      name: deploy application to vps
      runs-on: ubuntu-latest
      steps:
        - name: install ssh keys
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && sudo docker compose pull && sudo docker compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh